package main.com.app.entities;

import main.com.app.simulation.AStarPathfinder;

import java.util.List;

public class Predator extends Creature {
    private int attackPower;

    public Predator(Point point) {
        super(point);
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Predator)) return false;

        Predator predator = (Predator) o;

        return attackPower == predator.attackPower;
    }

    @Override
    public int hashCode() {
        return attackPower;
    }

    @Override
    public void makeMove(WorldMap worldMap) {
        AStarPathfinder pathfinder = new AStarPathfinder(worldMap);
        Point preyPosition = worldMap.findNearestPrey(this.point);
        if (preyPosition != null) {
            List<Point> path = pathfinder.findPath(this.point, new Point(preyPosition.getX(), preyPosition.getY()));

            // –Ø–∫—â–æ –∑–Ω–∞–π–¥–µ–Ω–æ —à–ª—è—Ö, –ø–µ—Ä–µ—Å—É–≤–∞—Ç–∏ —Ö–∏–∂–∞–∫–∞
            if (path != null && !path.isEmpty()) {
                Point nextMove = path.get(1); // –í–∏–±—Ä–∞—Ç–∏ –Ω–∞—Å—Ç—É–ø–Ω—É —Ç–æ—á–∫—É —à–ª—è—Ö—É (–ø–µ—Ä—à–∞ —Ç–æ—á–∫–∞ - –ø–æ—Ç–æ—á–Ω–∞ –ø–æ–∑–∏—Ü—ñ—è)

                // –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏, —á–∏ —Ç–æ—á–∫–∞ —î –ø–æ–∑–∏—Ü—ñ—î—é —Ç—Ä–∞–≤–æ—ó–¥–Ω–æ–≥–æ
                Entity prey = worldMap.getEntityByPoint(nextMove);
                if (prey instanceof Herbivore) {
                    // –•–∏–∂–∞–∫ –∑'—ó–¥–∞—î —Ç—Ä–∞–≤–æ—ó–¥–Ω–æ–≥–æ
                    worldMap.removeEntityByPoint(nextMove);
                    System.out.println("Predator ate Herbivore!");
                }

                // –ü–µ—Ä–µ–º—ñ—Å—Ç–∏—Ç–∏ —Ö–∏–∂–∞–∫–∞ –¥–æ –æ–±—Ä–∞–Ω–æ—ó —Ç–æ—á–∫–∏
                worldMap.updateEntityPosition(this.point, nextMove);

                // –û–Ω–æ–≤–∏—Ç–∏ –≤–Ω—É—Ç—Ä—ñ—à–Ω—é –ø–æ–∑–∏—Ü—ñ—é —Ö–∏–∂–∞–∫–∞
                this.point.setX(nextMove.getX());
                this.point.setY(nextMove.getY());
                System.out.println("End");
            }
        }
    }

    @Override
    public String toString() {
        return "\uD83D\uDC3A"; // üê∫
    }
}
